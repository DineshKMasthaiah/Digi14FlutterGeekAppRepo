// Mocks generated by Mockito 5.2.0 from annotations
// in digi14_geeks_app/test/test_generate_all_mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:digi14_geeks_app/common/model.dart' as _i9;
import 'package:digi14_geeks_app/events/event_data_model.dart' as _i6;
import 'package:digi14_geeks_app/events/events_repository.dart' as _i3;
import 'package:digi14_geeks_app/events/events_screen.dart' as _i5;
import 'package:digi14_geeks_app/events/events_service.dart' as _i7;
import 'package:digi14_geeks_app/http/api_client.dart' as _i10;
import 'package:digi14_geeks_app/http/generic_request.dart' as _i11;
import 'package:digi14_geeks_app/http/generic_response.dart' as _i2;
import 'package:digi14_geeks_app/storage/shared_prefs_manager.dart' as _i12;
import 'package:dio/dio.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGEGenericResponse_0<T> extends _i1.Fake
    implements _i2.GEGenericResponse<T> {}

/// A class which mocks [GEEventsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGEEventsRepository extends _i1.Mock
    implements _i3.GEEventsRepository {
  MockGEEventsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GEGenericResponse<dynamic>> searchEvents(String? searchTerm) =>
      (super.noSuchMethod(Invocation.method(#searchEvents, [searchTerm]),
              returnValue: Future<_i2.GEGenericResponse<dynamic>>.value(
                  _FakeGEGenericResponse_0<dynamic>()))
          as _i4.Future<_i2.GEGenericResponse<dynamic>>);
  @override
  void resetRepositoryData() =>
      super.noSuchMethod(Invocation.method(#resetRepositoryData, []),
          returnValueForMissingStub: null);
  @override
  bool cancelAllCalls() =>
      (super.noSuchMethod(Invocation.method(#cancelAllCalls, []),
          returnValue: false) as bool);
}

/// A class which mocks [GEEventsViewContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockGEEventsViewContract extends _i1.Mock
    implements _i5.GEEventsViewContract {
  MockGEEventsViewContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void showData(_i6.EventListDM? events) =>
      super.noSuchMethod(Invocation.method(#showData, [events]),
          returnValueForMissingStub: null);
  @override
  void showLoading() => super.noSuchMethod(Invocation.method(#showLoading, []),
      returnValueForMissingStub: null);
  @override
  void hideLoading() => super.noSuchMethod(Invocation.method(#hideLoading, []),
      returnValueForMissingStub: null);
  @override
  void showErrorPopup(String? error, String? code) =>
      super.noSuchMethod(Invocation.method(#showErrorPopup, [error, code]),
          returnValueForMissingStub: null);
}

/// A class which mocks [GEEventsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGEEventsService extends _i1.Mock implements _i7.GEEventsService {
  MockGEEventsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set cancelToken(_i8.CancelToken? _cancelToken) =>
      super.noSuchMethod(Invocation.setter(#cancelToken, _cancelToken),
          returnValueForMissingStub: null);
  @override
  _i4.Future<_i2.GEGenericResponse<dynamic>> searchEvents(String? searchTerm) =>
      (super.noSuchMethod(Invocation.method(#searchEvents, [searchTerm]),
              returnValue: Future<_i2.GEGenericResponse<dynamic>>.value(
                  _FakeGEGenericResponse_0<dynamic>()))
          as _i4.Future<_i2.GEGenericResponse<dynamic>>);
  @override
  _i2.GEGenericResponse<dynamic> processResponse(
          _i2.GEGenericResponse<dynamic>? originalResponse,
          _i9.GEModel? model) =>
      (super.noSuchMethod(
              Invocation.method(#processResponse, [originalResponse, model]),
              returnValue: _FakeGEGenericResponse_0<dynamic>())
          as _i2.GEGenericResponse<dynamic>);
  @override
  bool cancelAllRequests() =>
      (super.noSuchMethod(Invocation.method(#cancelAllRequests, []),
          returnValue: false) as bool);
}

/// A class which mocks [GEApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGEApiClient extends _i1.Mock implements _i10.GEApiClient {
  MockGEApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GEGenericResponse<dynamic>> call(
          _i11.GEGenericRequest? request) =>
      (super.noSuchMethod(Invocation.method(#call, [request]),
              returnValue: Future<_i2.GEGenericResponse<dynamic>>.value(
                  _FakeGEGenericResponse_0<dynamic>()))
          as _i4.Future<_i2.GEGenericResponse<dynamic>>);
  @override
  dynamic prepareSuccessResponse(_i2.GEGenericResponse<dynamic>? genResponse,
          _i11.GEGenericRequest? request, _i8.Response<dynamic>? response) =>
      super.noSuchMethod(Invocation.method(
          #prepareSuccessResponse, [genResponse, request, response]));
  @override
  bool success(int? statusCode) =>
      (super.noSuchMethod(Invocation.method(#success, [statusCode]),
          returnValue: false) as bool);
  @override
  void addGenericRequestHeaders(_i11.GEGenericRequest? request) => super
      .noSuchMethod(Invocation.method(#addGenericRequestHeaders, [request]),
          returnValueForMissingStub: null);
}

/// A class which mocks [GESharedPrefsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockGESharedPrefsManager extends _i1.Mock
    implements _i12.GESharedPrefsManager {
  MockGESharedPrefsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> saveFavoriteEvent(int? id) =>
      (super.noSuchMethod(Invocation.method(#saveFavoriteEvent, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> removeFavoriteEvent(int? id) =>
      (super.noSuchMethod(Invocation.method(#removeFavoriteEvent, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<List<String>?> getFavoriteEventList() => (super.noSuchMethod(
      Invocation.method(#getFavoriteEventList, []),
      returnValue: Future<List<String>?>.value()) as _i4.Future<List<String>?>);
}
